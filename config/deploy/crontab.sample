# This crontab is automatically generated on deploy

# Note redhat does not support env variables, so this is ugly. Later could create a template tool to gen this, or put scheduling in a long-running go process which becomes a server.
# http://stackoverflow.com/questions/2229825/where-can-i-set-environment-variables-that-crontab-will-use/10657111#10657111


# Time in local time of user, which you can tell by logging in and typing 'date'.
# .---------------- minute (0 - 59)
# |  .------------- hour (0 - 23)
# |  |  .---------- day of month (1 - 31)
# |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...
# |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat
# |  |  |  |  |
# *  *  *  *  *  command to be executed


# Fetch data once in the morning.
40 9 * * 1-5 /home/yourname/slack-status-tool/go-slack-status -conf=/home/yourname/slack-status-tool/config.json -stderrthreshold=INFO   -mode=live    >> /home/yourname/slack-status-tool/log/cron.log 2>&1


# Then send out for teams
59 9 * * 1-5 /home/yourname/slack-status-tool/go-slack-status -conf=/home/yourname/slack-status-tool/config.json -stderrthreshold=INFO   -mode=cache -team='Frontend' -team='Server'      >>  /home/yourname/slack-status-tool/log/cron.log 2>&1

59 9 * * 1-5 /home/yourname/slack-status-tool/go-slack-status -conf=/home/yourname/slack-status-tool/config.json -stderrthreshold=INFO   -mode=cache -team='Mobile - Android' -team='Mobile - iOS'    >>  /home/yourname/slack-status-tool/log/cron.log 2>&1
